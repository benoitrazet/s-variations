2019-06-23
- Add a generic Engine to capture several variations
- Add Logging
- Add a stream module

2019-01-07
- rename smart enumeration to Narrow, more appropriate.
- Savitch engine is general for non-deterministic machines. The
  NFA_equiv problem is just an instance of that.

2018-11-25
- Draft Savitch Engine

2018-11-15
- cleanup variation 3. refactor code

2018-08-13
- cleanup variation3 smart enumeration

2018-08-07
- cleanup variation3 smart enumeration

2018-06-15
- cleanup Set module interface

2018-06-03
- add test correctness framework

2018-05-31
- first version of variation3

2018-05-29
- add test for transitive closure algorithm.

2018-05-26
- add TODO markdown file

2018-05-01
- add the transitive closure that is compiling fine
- add variation3.ml but does not compile, there is work to do on this one (pspace_eq8).
- update the Makefile

2018-04-12
- changed the plan a little bit. Instead of doing the
enumeration based on accessible states, decided to do directly the
generalization to the transitive closure.

2018-04-04
- variation2 with counting
- testing more generic
- update README

2018-03-22
- factorize code by adding the subset and pair of subset API.

2018-03-21
- nfa as a record instead of triple
- add NOTES file

2018-03-19
- need to cleanup the interface for nfas. Including there are too many
details in the current implementation between list, set, etc. There
must be a better interface for all that.
- need to cleanup the interface enumeration of pair of states in the
vartiation 1
- need to have a test file that run all the benchmark with appropriate limits.

2018-03-19
- Variation 0 and Variation 1 are out